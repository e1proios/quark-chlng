services:
    app-mongo:
        image: mongo:latest
        container_name: app-mongo
        hostname: app-mongo
        command: mongod --quiet --logpath /dev/null
        environment:
            MONGO_INITDB_ROOT_USERNAME: "admin"
            MONGO_INITDB_ROOT_PASSWORD: "admin"
        ports:
            - "27017:27017"
        volumes:
            - ./mongo-init:/docker-entrypoint-initdb.d
        healthcheck:
            test: mongosh --eval "db.adminCommand('ping')" -u admin -p admin --authenticationDatabase admin
            interval: 10s
            timeout: 30s
            retries: 3
        restart: unless-stopped
        networks:
            - app-network

#    file-server:
#        image: python:3.9-alpine
#        container_name: file-server
#        ports:
#            - "3333:3333"
#        volumes:
#            - ./static_files:/app
#        working_dir: /app
#        command: python -m http.server 3333
#        restart: unless-stopped
#        networks:
#            - app-network

    franz-kafka:
        image: apache/kafka:4.0.0
        container_name: franz-kafka
        hostname: franz-kafka
        environment:
            KAFKA_NODE_ID: 1
            KAFKA_PROCESS_ROLES: broker,controller

            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@franz-kafka:9093
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_CREATE_TOPICS: "invoice-urls:1:1,processed-invoices:1:3"

            KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://franz-kafka:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT

            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        ports:
            - "9092:9092"
        networks:
            - app-network


    iban-blacklist-service:
        container_name: iban-blacklist-service
        hostname: iban-blacklist-service
        depends_on:
            app-mongo:
                condition: service_healthy
        build:
            context: ./iban-blacklist-service/
            dockerfile: ./src/main/docker/Dockerfile.jvm
        ports:
            - "8080:8080"
            - "${DEBUG_PORT_BLACKLIST_SVC:-5005}:${DEBUG_PORT_BLACKLIST_SVC:-5005}"
        environment:
            - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:${DEBUG_PORT_BLACKLIST_SVC:-5005}
            - QUARKUS_HTTP_PORT=8080
        networks:
            - app-network

    invoice-scanner-service:
        container_name: invoice-scanner-service
        hostname: invoice-scanner-service
        depends_on:
            - iban-blacklist-service
#            - file-server
            - franz-kafka
        build:
            context: ./invoice-scanner-service/
            dockerfile: ./src/main/docker/Dockerfile.jvm
        ports:
            - "8088:8080"
            - "${DEBUG_PORT_SCANNER_SVC:-5006}:${DEBUG_PORT_SCANNER_SVC:-5006}"
        environment:
            - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:${DEBUG_PORT_SCANNER_SVC:-5006}
            - QUARKUS_HTTP_PORT=8080
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    postgres_data:
